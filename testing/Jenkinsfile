pipeline 
{
    options 
    {
        timestamps()
    }
    agent any
    tools
    {
        maven 'Maven3.6.2' 
        jdk 'jdk8'
    }
    stages 
    {
        stage("Checkout") 
        {
            steps 
            {
                deleteDir()
                checkout scm
            }
        }
        stage('Build') 
        {
            when
            {
                anyOf
                {
                    branch "master"
                }
            }
            steps 
            {
                script 
                {
                    configFileProvider([configFile(fileId: '8412b7f1-a630-4f33-9b49-fe3e1de2ad03',variable: 'MAVEN_SETTINGS_XML')]) 
                    {
                        sh "mvn -s $MAVEN_SETTINGS_XML clean compile"
                    }
                }
            }
        }
        stage('Test') 
        {
            when
            {
                anyOf
                {
                    branch "master"
                }
            }
            steps 
            {
                script 
                {
                    configFileProvider([configFile(fileId: '8412b7f1-a630-4f33-9b49-fe3e1de2ad03',variable: 'MAVEN_SETTINGS_XML')]) 
                    {
                        sh "mvn -s $MAVEN_SETTINGS_XML clean test"
                    }
                }
            }
        }
        stage('Package') 
        {
            when
            {
                anyOf
                {
                    branch "master"
                }
            }
            steps 
            {
                script 
                {
                    configFileProvider([configFile(fileId: '8412b7f1-a630-4f33-9b49-fe3e1de2ad03',variable: 'MAVEN_SETTINGS_XML')]) 
                    {
                        sh "mvn -s $MAVEN_SETTINGS_XML clean package"
                    }
                }
            }
        }
        stage('E2E') 
        {
            when
            {
                anyOf
                {
                    branch "master"
                }
            }
            steps 
            {
                script 
                {
                    configFileProvider([configFile(fileId: '8412b7f1-a630-4f33-9b49-fe3e1de2ad03',variable: 'MAVEN_SETTINGS_XML')]) 
                    {
                        sh "mvn -s $MAVEN_SETTINGS_XML dependency:get -Dartifact=com.lidar:analytics:99-SNAPSHOT:jar -Ddest=analytics.jar"
                        sh "mvn -s $MAVEN_SETTINGS_XML dependency:get -Dartifact=com.lidar:telemetry:99-SNAPSHOT:jar -Ddest=telemetry.jar"
                    }
                    sh "cp target/*.jar testing.jar"
                    sh "java -cp testing.jar:analytics.jar:telemetry.jar com.lidar.simulation.Simulator"
                }
            }
        }
        stage('Publish')
        {
            when
            {
                anyOf
                {
                    branch "master"
                }
            }
            steps 
            {
                script 
                {
                    configFileProvider([configFile(fileId: '8412b7f1-a630-4f33-9b49-fe3e1de2ad03',variable: 'MAVEN_SETTINGS_XML')]) 
                    {
                        sh "mvn -s $MAVEN_SETTINGS_XML clean deploy -DskipTests"
                    }                
                }
            }
        }
    }
    post
    {
        failure
        {
            emailext recipientProviders: [culprits()], subject: 'Build failure', body: 'Build failed.', attachLog: true
        }
        success
        {
            emailext recipientProviders: [culprits()], subject: 'Build successful', body: 'Build successful.', attachLog: true
        }
    }
}



